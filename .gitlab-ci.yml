stages:
  - build
  - test
  - stage
  - release
  - prod

image: node:latest

variables:
  LINTER_PTRN: ^(tictactoe)(_)?([0-9]{2})?[\.js]+
  STAGE_PTRN: /^stage-[0-9]{3}/i
  RELEASE_PTRN: /^release-[0-9\.]+/i

Install dependencies:
  stage: build
  tags:
    - task-03-docker
  script:
    - yarn install
    - yarn add eslint --dev
    - yarn add eslint-plugin-react --dev
    - yarn add prettier --dev
    - yarn add husky --dev
  artifacts:
    paths:
      - node_modules
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules

Eslint test:
  stage: test
  tags:
    - task-03-docker
  when: on_success
  script:
    - yarn run eslint `for line in \`ls ./src | grep -iE $LINTER_PTRN\`; do echo \`pwd\`/src/$line; done`

Prettier test:
  stage: test
  tags:
    - task-03-docker
  when: on_success
  script:
    - yarn run prettier -c `for line in \`ls ./src | grep -iE $LINTER_PTRN\`; do echo \`pwd\`/src/$line; done`

Unit test 1:
  stage: test
  tags:
    - task-03-docker
  when: on_success
  variables:
    CI: "true"
  script:
    - export
    - yarn test `for line in \`ls ./src | grep -iE $LINTER_PTRN\`; do echo \`pwd\`/src/$line; done`

Unit test 2:
  stage: test
  tags:
    - task-03-docker
  when: on_success
  variables:
    CI: "true"
  script:
    - export
    - yarn test ./src/App.test.js

Staging:
  stage: stage
  tags:
    - task-03-docker
  when: on_success
  script:
    - echo "running staging.sh"
  only:
    refs:
      - tags
      - master
      - $STAGE_PTRN

Deploy release:
  stage: release
  tags:
    - task-03-docker
  when: manual
  script:
    - echo "running deploy_release.sh"
  only:
    refs:
      - tags
      - master
      - $RELEASE_PTRN

Deploy prod:
  stage: prod
  tags:
    - task-03-docker
  when: manual
  script:
    - echo "running deploy_prod.sh"
  only:
    refs:
      - tags
      - master
      - $RELEASE_PTRN
